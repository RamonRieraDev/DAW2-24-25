USE LIBRARY;

/* 5. Books and their authors' including the books without an author.*/
SELECT B.TITLE, A.NAME
FROM BOOK B LEFT OUTER JOIN AUTHOR A USING(AUTHOR_CODE)
WHERE AUTHOR_CODE IS NULL
;

/* 6. Books titles and their authors' complete names including the books
 without an author.*/
SELECT B.TITLE, CONCAT(A.NAME, ' ', A.SURNAMES) AS AUTHORS
FROM BOOK B LEFT OUTER JOIN AUTHOR A USING(AUTHOR_CODE);

/* 7. Authors without a book.*/
SELECT B.TITLE, CONCAT(A.NAME, ' ', A.SURNAMES) AS AUTHORS
FROM BOOK B RIGHT JOIN AUTHOR A USING(AUTHOR_CODE)
WHERE B.TITLE IS NULL;

/* 8. Members that never borrowed a book.*/
SELECT CONCAT(M.NAME, ' ', M.SURNAMES) AS MEMBER, B.BORROW_DATE
FROM MEMBER M LEFT JOIN BORROW B USING(MEMBER_CODE)
WHERE B.BORROW_DATE IS NULL;

/* 9 - Genres without books and books without genre.*/
SELECT GB.GENRE_CODE, G.NAME, NULL AS BOOK_CODE, NULL AS TITLE
FROM GENREBOOK GB RIGHT JOIN GENRE G USING(GENRE_CODE)
WHERE GB.GENRE_CODE IS NULL
UNION 
SELECT NULL, NULL, B.BOOK_CODE, B.TITLE
FROM BOOK B LEFT JOIN GENREBOOK GB USING(BOOK_CODE)
WHERE GB.BOOK_CODE IS NULL
;

/* 10 - Publishers without books published.*/
SELECT P.NAME, B.TITLE
FROM PUBLISHER P LEFT JOIN BOOK B USING(PUBLISHER_CODE)
WHERE B.PUBLISHER_CODE IS NULL;

/*11 - Books with no copies in the library.*/
SELECT B.TITLE
FROM BOOK B LEFT JOIN COPY C USING(BOOK_CODE)
WHERE C.BOOK_CODE IS NULL;

/*12 - Name of the authors distinct to NOAH GORDON who have written
 any history book. (MULTIPLES INNER JOIN)*/
 SELECT CONCAT(A.NAME, ' ', A.SURNAMES) AS AUTHOR, B.TITLE, G.NAME
 FROM AUTHOR A JOIN BOOK B USING(AUTHOR_CODE)
 JOIN GENREBOOK GB USING(BOOK_CODE)
 JOIN GENRE G USING(GENRE_CODE)
 WHERE CONCAT(A.NAME, ' ', A.SURNAMES) != 'NOAH GORDON'
 AND G.NAME = 'HISTORIA'
 ;

/*13 - Full name of the members who live in the same city as the 
member with code 1. (SUBQUERY WHERE OR SUBQUERY FROM)*/
SELECT CONCAT(M.NAME, ' ', M.SURNAMES) AS MEMBER
FROM MEMBER M
WHERE M.CITY IN (
SELECT M2.CITY
FROM MEMBER M2
WHERE M2.MEMBER_CODE = 1)
;

/*14 - Title of all books published by the same publisher as the 
book ‘EL MEDICO’. (SUBQUERY WHERE OR SUBQUERY FROM + INNER JOIN)
*/
SELECT B.TITLE AS BOOK, P.NAME AS PUBLISHER
FROM BOOK B JOIN PUBLISHER P USING(PUBLISHER_CODE)
WHERE P.PUBLISHER_CODE IN (
SELECT B2.PUBLISHER_CODE
FROM BOOK B2
WHERE B2.TITLE = 'EL MEDICO');

/*15 - Title of all books published by the same author as the book 
‘EL MEDICO’.*/

SELECT B.TITLE AS BOOK, CONCAT(A.NAME, ' ', A.SURNAMES) AS AUTHOR
FROM BOOK B JOIN AUTHOR A USING(AUTHOR_CODE)
WHERE A.AUTHOR_CODE IN (
SELECT B2.AUTHOR_CODE
FROM BOOK B2
WHERE B2.TITLE = 'EL MEDICO'); 

/*16 - Title of the books that belong to any genre to which the 
book ‘EL MEDICO’ belongs to*/
SELECT B.TITLE AS BOOK, GB.GENRE_CODE AS 'GENRE CODE'
FROM BOOK B JOIN GENREBOOK GB USING(BOOK_CODE)
WHERE GB.BOOK_CODE IN (
SELECT B2.BOOK_CODE
FROM BOOK B2
WHERE B2.TITLE = 'EL MEDICO')
;



SELECT * FROM GENREBOOK;